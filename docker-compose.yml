version: '3'

services:
  web:
    build: .
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - POSTGRES_NAME=${DATABASE_USER}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}
      - POSTGRES_HOST=${DATABASE_NAME}
      - POSTGRES_PORT=${DATABASE_PORT}
    depends_on:
      - taskprojectdb

  taskprojectdb:
    image: postgres:13
    container_name: postgres_db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - taskprojectdb
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    depends_on:
      - node_exporter
    # command:
    #   - "--config.file=/etc/prometheus/prometheus.yml"
    # volumes:
    #   - prometheus_data:/prometheus  # Persist Prometheus data
    #   - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana  # Persist Grafana data
    networks:
      - monitoring

  # Add Node Exporter Service
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  postgres_data:  # Volume for PostgreSQL data
  prometheus_data:  # Volume for Prometheus data
  grafana_data:  # Volume for Grafana data
