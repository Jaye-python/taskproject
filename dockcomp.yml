version: '3'

services:
  web:
    build: .
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=taskprojectdb
      - POSTGRES_PORT=5433  # Add this to specify the port
    depends_on:
      - taskprojectdb

  taskprojectdb:
    image: postgres:13
    container_name: postgres_db
    ports:
      - "5433:5432"  # Map port 5433 on the host to port 5432 in the container
    environment:
      POSTGRES_DB: taskprojectdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ola #compose
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com  # Set your pgAdmin login email
      PGADMIN_DEFAULT_PASSWORD: admin  # Set your pgAdmin password
    ports:
      - "5050:80"  # Expose pgAdmin on port 5050
    depends_on:
      - taskprojectdb  # Ensure the PostgreSQL database is running
    networks:
      - monitoring  # Use the same network as PostgreSQL


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus  # Persist Prometheus data
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana  # Persist Grafana data
    networks:
      - monitoring

   # Add Node Exporter Service
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9100:9100"  # Expose Node Exporter on port 9100
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:  # Volume for Prometheus data
  grafana_data:  # Volume for Grafana data
